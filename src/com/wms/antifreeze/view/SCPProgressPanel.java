/*
 * SCPProgessPanel.java
 *
 * Created on October 26, 2005, 12:55 PM
 */

package com.wms.antifreeze.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

/**
 *
 * @author  mstemen
 */
public class SCPProgressPanel extends javax.swing.JPanel {
    
    private Timer timer;
    private SCPJob job;
    private int jobCheckInterval = 1000;
    private boolean jobSet = false;    
    private String version = System.getProperty("java.vm.version");
    private String jreName = System.getProperty("java.vm.name");
    // create a timer
    
    /** Creates new form SCPProgessPanel */
    public SCPProgressPanel( int min, int max ) {
        initComponents();
        progressMessage.setText( "" );
        progressNote.setText( "" );
        jobProgressBar.setMinimum( min );
        jobProgressBar.setMaximum( max );      
        progJavaVersion.setText( jreName + " " + version );
        
    }
    
    public void start()
    {
        if( ! jobSet )
            return;
        
        timer = new Timer( jobCheckInterval, new ActionListener()
        
        {
           public void actionPerformed( ActionEvent e )
           {
               jobProgressBar.setValue( job.getCurrent() );
               progressNote.setText( job.getNote());
               if( job.isDone())
               {
                   timer.stop();
                   jobProgressBar.setValue( jobProgressBar.getMinimum() );
               }
               validate();
           }
        });
        timer.setInitialDelay( 0 );
        timer.start();
        
    }
    
    public void stop()
    {
        if( timer != null )
            timer.stop();       
    }
            
    public void setJob( SCPJob job )
    {
        this.job = job;
        job.setPanel( this );
        progressMessage.setText( job.getMessage() );
        jobSet = true;
    }
    
    public void setNote( String note )
    {
        progressNote.setText( note );
        validate();
    }
    
    public void setMessage( String message )
    {
        progressMessage.setText( message );        
        validate();
    }
    
    public void validate()
    {
        jobProgressBar.validate();
        progressMessage.validate();
        progressNote.validate();
        jobProgressBar.repaint();
        super.validate();                        
        repaint();        

    }
    
    public void setMinimum( int min )
    {
        jobProgressBar.setMinimum( min );
    }
    
    public void setMaximum( int max )
    {
        jobProgressBar.setMaximum( max );
    }
    
    public void showLogo( boolean flag )
    {
        afLogo.setVisible( flag );
    }
    public void showVersion( boolean flag )
    {
        progJavaVersion.setVisible( flag );
    }
    
    public void setValue( int value )
    {
        // if( ParallaxMgr.getMgr() != null )
        //    ParallaxMgr.getMgr().getLog().write( "Setting done value to: " + value );
        jobProgressBar.setValue( value );
        validate();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel4 = new javax.swing.JPanel();
        afLogo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jobProgressBar = new javax.swing.JProgressBar();
        progressMessage = new javax.swing.JLabel();
        progressNote = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        progJavaVersion = new javax.swing.JLabel();

        setBorder(new javax.swing.border.MatteBorder(null));
        setMinimumSize(new java.awt.Dimension(550, 225));
        setLayout(new java.awt.GridLayout(1, 0));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setMinimumSize(new java.awt.Dimension(550, 225));
        jPanel4.setPreferredSize(new java.awt.Dimension(550, 225));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        afLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/wms/antifreeze/view/resources/AF_1_0_Splash_2.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(afLogo, gridBagConstraints);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/wms/antifreeze/view/resources/32x32.PNG"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jLabel1, gridBagConstraints);

        jobProgressBar.setStringPainted(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 0, 0);
        jPanel4.add(jobProgressBar, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel4.add(progressMessage, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel4.add(progressNote, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel2.setForeground(new java.awt.Color(0, 51, 153));
        jLabel2.setText("Java Version: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel4.add(jLabel2, gridBagConstraints);

        progJavaVersion.setFont(new java.awt.Font("Tahoma", 2, 10));
        progJavaVersion.setForeground(new java.awt.Color(0, 51, 153));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel4.add(progJavaVersion, gridBagConstraints);

        add(jPanel4);
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel afLogo;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JPanel jPanel4;
    public javax.swing.JProgressBar jobProgressBar;
    public javax.swing.JLabel progJavaVersion;
    public javax.swing.JLabel progressMessage;
    public javax.swing.JLabel progressNote;
    // End of variables declaration//GEN-END:variables
    
}
